{
  "permissions": {
    "allow": [
      "Bash(\"D:\\Projects\\ForexGPT\\.venv\\Scripts\\python.exe\" -c \"\nimport sys\nsys.path.append(''src'')\ntry:\n    print(''Testing forecast backtesting integration...'')\n    \n    # Test forecast backtest engine\n    from forex_diffusion.backtesting.forecast_backtest_engine import ForecastBacktestEngine\n    \n    engine = ForecastBacktestEngine()\n    print(''✓ ForecastBacktestEngine imported successfully'')\n    \n    # Test probabilistic metrics\n    from forex_diffusion.backtesting.probabilistic_metrics import ProbabilisticMetrics\n    \n    metrics = ProbabilisticMetrics()\n    print(''✓ ProbabilisticMetrics imported successfully'')\n    \n    # Test multi-horizon validator\n    from forex_diffusion.backtesting.multi_horizon_validator import MultiHorizonValidator\n    \n    validator = MultiHorizonValidator()\n    print(''✓ MultiHorizonValidator imported successfully'')\n    \n    # Test pattern benchmark suite\n    from forex_diffusion.backtesting.pattern_benchmark_suite import PatternBenchmarkSuite\n    \n    benchmark = PatternBenchmarkSuite()\n    print(''✓ PatternBenchmarkSuite imported successfully'')\n    \n    print()\n    print(''=== FORECAST BACKTESTING INTEGRATION SUCCESS ==='')\n    print()\n    print(''Components Status:'')\n    print(''• Forecast Backtesting Engine: READY'')\n    print(''• Probabilistic Metrics System: READY'')\n    print(''• Multi-Horizon Validator: READY'')  \n    print(''• Pattern Benchmark Suite: READY'')\n    print()\n    print(''All backtesting systems integrated successfully!'')\n    print(''Ready for generative model evaluation and pattern benchmarking.'')\n    \nexcept Exception as e:\n    print(f''Integration test error: {e}'')\n    import traceback\n    traceback.print_exc()\n\")"
    ],
    "deny": [],
    "ask": []
  }
}