[build-system]
requires = ["setuptools>=69", "wheel", "joblib"]
build-backend = "setuptools.build_meta"

[project]
name = "forex-diffusion"
version = "0.1.0"
description = "Models & training pipeline per ForexMagic"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "ForexMagic", email = "dev@forexmagic.local" }]
license = { text = "Proprietary" }

dependencies = [
  # Qt/GUI Dependencies
  "PySide6>=6.5.0",
  "PySide6-Essentials>=6.5.0",
  "PySide6-Addons>=6.5.0",

  # Core Data Processing
  "numpy>=1.24",
  "pandas>=2.0",
  "scikit-learn>=1.3",
  "joblib>=1.3",

  # Configuration & Utilities
  "pyyaml",
  "pytz",
  "loguru>=0.7.0",
  "psutil>=5.9.0",

  # Trading & Analysis Libraries
  "bta-lib>=1.0.0",
  "finplot>=1.9.0",
  "yfinance>=0.2.0",
  # VectorBT Pro - installed from wheel file in VectorBt_PRO/
  # pip install ./VectorBt_PRO/vectorbtpro-2025.7.27-py3-none-any.whl

  # Database & Caching
  "duckdb",
  "diskcache>=5.6.0",

  # Async & Performance
  "asyncio-throttle>=1.0.2",

  # Phase 3 Advanced Features Dependencies
  "tensorflow>=2.13.0",
  # PyTorch with CUDA 12.x support (install with: pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121)
  # Note: Remove CPU-only versions first: pip uninstall torch torchvision torchaudio
  "scipy>=1.10.0",

  # Optimization & Backtesting Libraries
  "pymoo>=0.6.0",  # NSGA-II multi-objective optimization
  "autograd>=1.4",  # Required by pymoo
  "backtesting>=0.3.3",  # kernc/backtesting.py strategy backtesting

  # Multi-Provider Integration (Phase 1-4)
  "ctrader-open-api>=1.0.0",  # cTrader Open API client
  "twisted>=23.0.0",           # Async framework for cTrader
  "protobuf>=4.0.0",          # Protocol buffers for cTrader
  "keyring>=24.0.0",          # Secure credential storage
  "cryptography>=41.0.0",     # Fernet encryption
  "httpx>=0.25.0",            # Async HTTP for OAuth

  # NVIDIA Optimization Stack (Phase 1)
  # PyTorch Lightning already included above
  "pytorch-lightning>=2.0.0",  # Training framework
  "pynvml>=11.5.0",           # NVIDIA Management Library for GPU detection
  # APEX (NVIDIA fused optimizers) - install separately:
  # pip install -v --disable-pip-version-check --no-cache-dir --no-build-isolation --config-settings "--build-option=--cpp_ext" --config-settings "--build-option=--cuda_ext" git+https://github.com/NVIDIA/apex.git
  # Flash Attention 2 - install separately (requires Ampere+ GPU):
  # pip install flash-attn --no-build-isolation
  # NVIDIA DALI - install separately (optional):
  # pip install --extra-index-url https://pypi.nvidia.com --upgrade nvidia-dali-cuda120

  # SQLAlchemy for optimization database
  "sqlalchemy>=2.0.0",        # ORM for optimization results database
  "alembic>=1.12.0",          # Database migrations (already used in project)
]

[project.scripts]
fx-train-sklearn = "forex_diffusion.training.train_sklearn:main"
fx-train-lightning = "forex_diffusion.training.train:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["forex_diffusion*"]

[tool.setuptools.package-data]
forex_diffusion = ["py.typed", "data/**/*"]

